<?xml version="1.0" standalone="yes"?>
<pysystest type="auto" state="runnable">

  <description>
    <title>Performance of BuildingOccupancyMonitoring App for variations of device count and data rate</title>
    <purpose><![CDATA[
      Check the performance of the AlarmOnAbnormalMeanDeviation app by iterating over devices of various
      classes.

      The BuildingOccupancyMonitoring app is a combination of three EPL apps to monitor occupancies 
      of buildings. It combines BuildingOccupancyCalculation, AlarmOnMeasurementThreshold, and 
      OperationOnAlarmNotCleared EPL apps.

      Each building has multiple access points through which people can enter or exit. Each access point 
      generates measurements for the total number of people entered and exited through it. The 
      BuildingOccupancyCalculation app calculates the total occupancy of each building and generates 
      periodic measurements with the count. The AlarmOnMeasurementThreshold is used to monitor the total occupancy 
      of each building and raises an alarm if occupancy is more than the defined threshold. The OperationOnAlarmNotCleared 
      app monitors the raised alarms and creates an operation if a raised alarm is not cleared within the configured duration.

      The Cumulocity Device Classes define the incoming update frequency for each class of devices:
      +================+========================+====================+=======================+
      | Device class   | Update frequency       | Example device     | Min Ev/s | Max Ev/s   |
      +================+========================+====================+==========+============+
      |  A             | < 1 per hour           | Smart Water Meter  |      -   | 0.0003     |
      +----------------+----------------- ------+--------------------+----------+------------+
      |  B             | 1-6 per hour           | Vending Machine    | 0.0003   | 0.0017     |
      +----------------+------------------------+--------------------+----------+------------+
      |  C             | 6 per hour - 1 per min | Air Compressor     | 0.0017   | 0.0167     |
      +----------------+------------------------+--------------------+----------+------------+
      |  D             | 1 - 6 per min          | Excavator          | 0.0167   | 0.1000     |
      +----------------+------------------------+--------------------+----------+------------+
      |  E             | 6 per min - 1 per sec  | Vehicle Telematics | 0.1000   | 1.0000     |
      +----------------+------------------------+--------------------+----------+------------+
      |  F             | > 1 per sec            | Painting Robot     | 1.0000   | 1,000.0000 |
      +----------------+------------------------+--------------------+----------+------------+
]]>
    </purpose>
  </description>

  <classification>
    <groups>
      <group>performance</group>
    </groups>
  </classification>

  <data>
    <class name="PySysTest" module="run"/>
  </data>
  
  <traceability>
    <requirements>
      <requirement id=""/>
    </requirements>
  </traceability>
</pysystest>
